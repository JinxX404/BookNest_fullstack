# Generated by Django 5.1.2 on 2025-04-25 13:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('books', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='bookrating',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bookreview',
            name='book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='books.book'),
        ),
        migrations.AddField(
            model_name='bookreview',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='readinglist',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reading_lists', to='users.profile'),
        ),
        migrations.AddField(
            model_name='readinglistbooks',
            name='book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reading_list_books', to='books.book'),
        ),
        migrations.AddField(
            model_name='readinglistbooks',
            name='readinglist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reading_list_books', to='books.readinglist'),
        ),
        migrations.AddField(
            model_name='readinglist',
            name='books',
            field=models.ManyToManyField(through='books.ReadingListBooks', to='books.book'),
        ),
        migrations.AlterUniqueTogether(
            name='bookrating',
            unique_together={('user', 'book')},
        ),
    ]
